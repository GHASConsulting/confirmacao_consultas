version: "3.8"

services:
  # Aplicação principal
  app:
    build:
      context: .
    depends_on:
      db-postgresql:
        condition: service_started
    environment:
      BOTCONVERSA_API_KEY: be4844e4-6e0d-4cf2-9118-9be35304d067
      BOTCONVERSA_API_URL: https://api.botconversa.com.br/v1
      BOTCONVERSA_WEBHOOK_SECRET: your_botconversa_webhook_secret
      DATABASE_TYPE: postgresql
      DATABASE_URL: postgresql://postgres:1234@localhost:5432/santaCasa
      DEBUG: "True"
      FIREBIRD_URL: firebird://SYSDBA:masterkey@db-firebird:3050/hospital_db
      HOSPITAL_ADDRESS: Rua Domingos Vieira, 590 - Santa Efigênia
      HOSPITAL_CITY: Belo Horizonte
      HOSPITAL_NAME: Santa Casa de Belo Horizonte
      HOSPITAL_PHONE: (31) 3238-8100
      HOSPITAL_STATE: MG
      LOG_LEVEL: INFO
      MAX_WORKERS: '4'
      ORACLE_URL: oracle+cx_oracle://system:oracle@db-oracle:1521/XE
      POSTGRESQL_URL: postgresql://postgres:1234@db-postgresql:5432/santaCasa
      SCHEDULER_CONFIRMATION_HOUR: '9'
      SCHEDULER_CONFIRMATION_MINUTE: '0'
      SCHEDULER_ENABLE_CONFIRMATION_JOB: "True"
      SCHEDULER_ENABLE_REMINDER_JOB: "True"
      SCHEDULER_REMINDER_HOUR: '14'
      SCHEDULER_REMINDER_MINUTE: '0'
      WEBHOOK_HOST: 0.0.0.0
      WEBHOOK_PORT: '5001'
      WEBHOOK_URL: https://meuservidor.com/webhook/botconversa
      WORKER_TIMEOUT: '30'
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
        - CMD
        - curl
        - -f
        - http://localhost:5001/health
      timeout: 10s
    ports:
      - published: 5001
        target: 5001
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs:rw

  # Banco Oracle
  db-oracle:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    environment:
      - ORACLE_PWD=${ORACLE_DOCKER_PASSWORD:-oracle}
      - ORACLE_CHARACTERSET=AL32UTF8
    volumes:
      - oracle_data:/opt/oracle/oradata
      - ./init-oracle.sql:/opt/oracle/scripts/startup/init-oracle.sql
    ports:
      - "${ORACLE_DOCKER_PORT:-1521}:1521"
    restart: unless-stopped
    profiles:
      - oracle
    healthcheck:
      test: [ "CMD", "sqlplus", "-L", "${ORACLE_DOCKER_USER:-system}/${ORACLE_DOCKER_PASSWORD:-oracle}@//localhost:${ORACLE_DOCKER_PORT:-1521}/${ORACLE_DOCKER_SERVICE:-XE}", "-c", "SELECT 1 FROM DUAL" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  # Banco PostgreSQL
  db-postgresql:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRESQL_DOCKER_DB:-confirmacao_consultas}
      - POSTGRES_USER=${POSTGRESQL_DOCKER_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRESQL_DOCKER_PASSWORD:-1234}
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./init-postgresql.sql:/docker-entrypoint-initdb.d/init-postgresql.sql
    ports:
      - "${POSTGRESQL_DOCKER_PORT:-5432}:5432"
    restart: unless-stopped
    profiles:
      - postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRESQL_DOCKER_USER:-postgres}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Banco Firebird
  db-firebird:
    image: jacobalberty/firebird:3.0
    environment:
      - FIREBIRD_DATABASE=${FIREBIRD_DOCKER_DB:-hospital_db}
      - FIREBIRD_USER=${FIREBIRD_DOCKER_USER:-SYSDBA}
      - FIREBIRD_PASSWORD=${FIREBIRD_DOCKER_PASSWORD:-masterkey}
    volumes:
      - firebird_data:/firebird/data
      - ./init-firebird.sql:/docker-entrypoint-initdb.d/init-firebird.sql
    ports:
      - "${FIREBIRD_DOCKER_PORT:-3050}:3050"
    restart: unless-stopped
    profiles:
      - firebird
    healthcheck:
      test: [ "CMD", "gds_db_info", "-user", "${FIREBIRD_DOCKER_USER:-SYSDBA}", "-password", "${FIREBIRD_DOCKER_PASSWORD:-masterkey}", "-database", "localhost:${FIREBIRD_DOCKER_PORT:-3050}/${FIREBIRD_DOCKER_DB:-hospital_db}" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Nginx (opcional - para produção)
  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    profiles:
      - production
    restart: unless-stopped

volumes:
  oracle_data:
  postgresql_data:
  firebird_data:
